//  Module: sound_chip
//
module sound_chip
#(parameter BITWIDTH = )
(
    //  PORTS
    input logic CLK_IN,
    input logic RESET_N,
    input logic EN,
    input regPKG::reg_data_t FREQ_IN,
    output synthPKG::synth_sig TRI_OUT,
    output synthPKG::synth_sig SQ_OUT
);

synthPKG::synth_sig square_wave, tri_wave;

assign TRI_OUT = tri_wave;
assign SQ_OUT = square_wave;

square_gen square_wave_generator
(
    .clk_in(CLK_IN),
    .reset_n(RESET_N),
    .enable(EN),
    .freq_in(FREQ_IN),
    .square_out(square_wave)
);

integrator triangle_wave_generator
(
    .clk_in(CLK_IN),
    .reset_n(RESET_N),
    .enable(EN),
    .freq_in(FREQ_IN),
    .sig_in(square_wave),
    .sig_out(tri_wave)
);


endmodule: sound_chip
